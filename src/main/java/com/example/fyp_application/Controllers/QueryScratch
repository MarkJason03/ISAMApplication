//
//For gathering User information from the database
SELECT tbl_Users.UserID, FirstName,LastName,Gender,DOB,Email,Username,Phone,AccountStatus,CreatedAt,ExpiresOn,
       tbl_userRoles.userRoleName,
       tbl_Departments.deptName AS departmentName
FROM tbl_Users
JOIN tbl_userRoles ON tbl_Users.userRoleID = tbl_userRoles.userRoleID
JOIN tbl_Departments ON tbl_Users.deptID = tbl_Departments.deptID;



//Logic for login
SELECT tbl_Users.UserID, tbl_Users.Username, tbl_Users.Password, tbl_Users.FirstName, tbl_Users.userRoleID, tbl_userRoles.userRoleName, tbl_userRoles.userRoleID AS userRoleID
FROM tbl_Users
JOIN tbl_userRoles ON tbl_Users.userRoleID = tbl_userRoles.userRoleID
WHERE tbl_Users.Username = ? AND tbl_Users.Password = ?;



//Logic for update

Update tbl_Users SET column=? where ID=?

//Logic for delete

DELETE FROM tbl_Users WHERE ID=?

//Logic for insert
In





// for checking if password is incorrect
import javafx.animation.TranslateTransition;
import javafx.scene.Node;
import javafx.util.Duration;

private void shake(Node node) {
    TranslateTransition tt = new TranslateTransition(Duration.millis(50), node);
    tt.setByX(5);
    tt.setCycleCount(6);
    tt.setAutoReverse(true);
    tt.playFromStart();
}
import javafx.animation.TranslateTransition;
import javafx.scene.Node;
import javafx.util.Duration;

private void shake(Node node) {
    TranslateTransition tt = new TranslateTransition(Duration.millis(50), node);
    tt.setByX(5);
    tt.setCycleCount(6);
    tt.setAutoReverse(true);
    tt.playFromStart();
}

on the initializable method, you can add the following code to check if the password is incorrect and shake the password field:

// Assuming newPassword_TF and confirmationPassword_TF are your TextField variables
newPassword_TF.textProperty().addListener((observable, oldValue, newValue) -> checkPasswords());
confirmationPassword_TF.textProperty().addListener((observable, oldValue, newValue) -> checkPasswords());
